-- Simple UNC checker script made by Gerdroid
-- Thanks to DumbyDev for help!

local StarterGui = game.StarterGui or game:GetService("StarterGui")
local Working_Scripts = 0
local UnWorking_Scripts = 0

print("Running Simple UNC Checker v.1.0.4 !!!")
print("‚úÖÔ∏è-Pass üìõ-Failed")  
    
local function test(name, func)
  if typeof(func) == "function" or typeof(func) == "table" then
     print("(‚úÖÔ∏è) "..name)
     Working_Scripts = Working_Scripts + 1
  else
     print("(üìõ) "..name)
     UnWorking_Scripts = UnWorking_Scripts + 1
  end
end

StarterGui:SetCore("DevConsoleVisible", true)

task.spawn(function()
    -- synapse
    test("syn", syn)
    
    -- default luau
    test("game", game)
    test("game.CoreGui", game.CoreGui)
    test("workspace", workspace)
    test("task", task)
    test("table", table)
    test("string", string)
    
    -- property
    test("sethiddenproperty", sethiddenproperty)
    test("gethiddenproperty", gethiddenproperty)
    test("set_hidden_property", set_hidden_property)
    test("get_hidden_property", get_hidden_property)
    test("setrenderproperty", setrenderproperty)
    test("getrenderproperty", getrenderproperty)
    test("setsimulationradius", setsimulationradius)
    test("set_simulation_radius", set_simulation_radius)
    test("set_render_property", set_render_property)
    test("get_render_property", get_render_property)
    test("isnetworkowner", isnetworkowner)

    -- clipboard
    test("setclipboard", setclipboard)
    test("setrbxclipboard", setrbxclipboard)
    test("getclipboard", getclipboard)
    test("toclipboard", toclipboard)
    test("writeclipboard", writeclipboard)
    test("messagebox", messagebox)
    
    -- files
    test("makefolder", makefolder)
    test("writefile", writefile)
    test("appendfile", appendfile)
    test("loadfile", loadfile)
    test("isfolder", isfolder)
    test("isfile", isfile)
    test("readfile", readfile)
    test("listfiles", listfiles)
    test("dofile", dofile)
    test("delfile", delfile)
    test("delfolder", delfolder)
    test("readprotectedfile", readprotectedfile)
    test("writeprotectedfile", writeprotectedfile)
    
    -- env
    test("getgenv", getgenv)
    test("getfenv", getfenv)
    test("getsenv", getsenv)
    test("getreg", getreg)
    test("getgc", getgc)
    test("getrenv", getrenv)
    test("setfenv", setfenv)
  
    -- instances
    test("getinstances", getinstances)
    test("getnilinstances", getnilinstances)
    test("gethiddeninstances", gethiddeninstances)
    test("sethiddeninstances", sethiddeninstances)
    test("compareinstances", compareinstances)
    
    -- instance
    test("Instance", Instance)
    test("dumpinstance", dumpinstance)
    test("dump_instance", dump_instance)
    test("spoofinstance", spoofinstance)
    test("unspoofinstance", unspoofinstance)
    test("spoof_instance", spoof_instance)
    test("unspoof_instance", unspoof_instance)
    test("hookinstance", hookinstance)
    test("unhookinstance", unhookinstance)
    test("hook_instance", hook_instance)
    test("unhook_instance", unhook_instance)
    test("saveinstance", saveinstance)
    test("save_instance", save_instance)
    test("protectinstance", protectinstance)
    test("unprotectinstance", unprotectinstance)
    test("protect_instance", protect_instance)
    test("unprotect_instance", protect_instance)

    -- console
    test("rconsolesettitle", rconsolesettitle)
    test("rconsoleprint", rconsoleprint)
    test("rconsoleerr", rconsoleerr)
    test("rconsolewarn", rconsolewarn)
    test("rconsolecreate", rconsolecreate)
    test("rconsoledestroy", rconsoledestroy)
    test("rconsoleclear", rconsoleclear)
    test("rconsoleinput", rconsoleinput)
    test("consolesettitle", consolesettitle)
    test("consoleprint", consoleprint)
    test("consoleerr", consoleerr)
    test("consolewarn", consolewarn)
    test("consolecreate", consolecreate)
    test("consoledestroy", consoledestroy)
    test("consoleclear", consoleclear)
    test("consoleinput", consoleinput)
    
    -- execute
    test("require", require)
    test("loadstring", loadstring)
    
    -- globals
    test("getglobals", getglobals)
    test("setglobals", setglobals)
  
    -- queue
    test("queueonteleport", queueonteleport)
    test("queue_on_teleport", queue_on_teleport)
    
    -- machine
    test("gethwid", gethwid)
    test("getmachineid", getmachineid)
    
    -- executor
    test("getexecutorname", getexecutorname)
    test("identifyexecutor", identifyexecutor)
    test("getidentify", getidentify)
    test("setidentify", setidentify)
    test("writeautoexec", writeautoexec)

    -- dump
    test("dumpstring", dumpstring)
    test("decompile", decompile)
    
    -- active
    test("isgameactive", isgameactive)
    test("isrbxactive", isrbxactive)
    
    -- threads
    test("getthreadcontext", getthreadcontext)
    test("getthreadidentity", getthreadidentity)
    test("setthreadidentity", setthreadidentity)
    
    -- asset
    test("writecustomasset", writecustomasset)
    test("iscustomasset", iscustomasset)
    test("getsynasset", getsynasset)
    test("getcustomasset", getcustomasset)
    test("getspecialinfo", getspecialinfo)
    
    -- modules
    test("getmodules", getmodules)
    test("getmoduleinfo", getmoduleinfo)
    test("getloadedmodules", getloadedmodules)
    test("getthreads", getthreads)
    
    -- fflag
    test("setfflag", setfflag)
    test("getfflag", getfflag)
    
    -- fps
    test("setfpscap", setfpscap)
    test("setfps", setfps)
    test("getfps", getfps)
    
    -- compress
    test("lz4compress", lz4compress)
    test("lz4decompress", lz4decompress)
    
    -- closure
    test("islclosure", islclosure)
    test("isourclosure", isourclosure)
    test("iscclosure", iscclosure)
    test("newcclosure", newcclosure)
    test("iskrnlclosure", iskrnlclosure)
    test("issynclosure", issynclosure)
    test("is_l_closure", is_l_closure)
    test("isexecclosure", isexecclosure)
    test("isexecutorclosure", isexecutorclosure)
    test("getscriptclosure", getscriptclosure)
    test("checkclosure", checkclosure)
    test("replacesclosure", replacesclosure)

    -- function
    test("hookfunc", hookfunc)
    test("hookfunction", hookfunction)
    test("ishooked", ishooked)
    test("isfunctionhooked", isfunctionhooked)
    test("clonefunction", clonefunction)
    test("clonefunc", clonefunc)
    test("restorefunction", restorefunction)
    test("is_exploit_function", is_exploit_function)
    test("is_synapse_function", is_synapse_function)
    test("getfunctionhash", getfunctionhash)

    -- script
    test("getscripts", getscripts)
    test("get_scripts", get_scripts)
    test("setscriptable", setscriptable)
    test("isscriptable", isscriptable)
    test("getcallingscript", getcallingscript)
    test("getrunningscripts", getrunningscripts)
    test("getscripthash", getscripthash)
    test("setscriptbytecode", setscriptbytecode)
    test("getscriptbytecode", getscriptbytecode)
    test("restorescriptbytecode", restorescriptbytecode)
    
    -- gui
    test("getprotectedguis", getprotectedguis)
    test("protectgui", protectgui)
    test("unprotectgui", unprotectgui)
    test("protect_gui", protect_gui)
    test("unprotect_gui", unprotect_gui)
    test("sethui", sethui)
    test("gethui", gethui)
  
    -- fire
    test("fireserver", fireserver)
    test("fireclient", fireclient)
    test("firesignal", firesignal)
    test("fireclickdetector", fireclickdetector)
    test("fireproximityprompt", fireproximityprompt)
    test("firetouchinterest", firetouchinterest)
    test("replicatesignal", replicatesignal)
    test("cansignalreplicate", cansignalreplicate)
    test("getsignalarguments", getsignalarguments)
    
    -- metatable
    test("getmetatable", getmetatable)
    test("setmetatable", setmetatable)
    test("checkmetatable", checkmetatable)
    test("spoofmetatable", spoofmetatable)
    test("getrawmetatable", getrawmetatable)
    test("setrawmetatable", setrawmetatable)
    test("readonly", readonly)
    test("setreadonly", setreadonly)
    test("isreadonly", isreadonly)
    test("hookmetamethod", hookmetamethod)
    test("unhookmetamethod", unhookmetamethod)

    -- Drawing
    test("Drawing", Drawing)
    test("Drawing.new", Drawing.new)
    test("Drawing.Fonts", Drawing.Fonts)
    test("cleardrawcache", cleardrawcache)
    test("isrenderobj", isrenderobj)
    
    -- debug
    test("debug", debug)
    test("setupvalue", setupvalue)
    test("getupvalues", getupvalues)
    test("setproto", setproto)
    test("traceback", traceback)
    test("setstack", setstack)
    test("getstack", getstack)
    test("debug.getinfo", debug.getinfo)
    test("debug.setupvalue", debug.setupvalue)
    test("debug.getupvalues", debug.getupvalues)
    test("debug.setproto", debug.setproto)
    test("debug.setstack", debug.setstack)
    test("debug.getstack", debug.getstack)
    test("debug.traceback", debug.traceback)
    test("debug.getmetatable", debug.getmetatable)
    test("debug.setmetatable", debug.setmetatable)
    test("debug.getregistry", debug.getregistry)
    test("debug.getconstants", debug.getconstants)
    test("debug.setconstant", debug.setconstant)
    
    -- connections
    test("getconnections", getconnections)
    test("disableconnection", disableconnection)
    test("enableconnection", enableconnection)
    test("isconnectionenabled", isconnectionenabled)
    test("disconnectconnections", disconnectconnections)
    test("disconnect_all_connections", disconnect_all_connections)
  
    -- mouse
    test("mouse1press", mouse1press)
    test("mouse2press", mouse2press)
    test("mouse1click", mouse1press)
    test("mouse2click", mouse2press)
    test("mouse1release", mouse1release)
    test("mouse2release", mouse2release)
    test("mousescroll", mousescroll)
    test("keypress", keypress)
    test("keyrelease", keyrelease)
    test("mousemove", mousemove)
    test("mousemoveabs", mousemoveabs)
    test("mousemoverel", mousemoverel)
    
    -- cache
    test("cache", cache)
    test("cache.iscached", cache.iscached)
    test("cache.invalidate", cache.invalidate)
    test("cache.replace", cache.replace)
    
    -- crypt
    test("crypt", crypt)
    test("crypt.base64decode", crypt.base64decode)
    test("crypt.base64encode", crypt.base64encode)
    test("crypt.decrypt", crypt.decrypt)
    test("crypt.encrypt", crypt.encrypt)
    
    -- calls
    test("getcaller", getcaller)
    test("checkcaller", checkcaller)
    test("getnamecallmethod", getnamecallmethod)
    test("setnamecallmethod", setnamecallmethod)
    test("getcallbackvalue", getcallbackvalue)
        
    -- http
    test("request", request)
    test("http_request", http_request)
    test("HttpGet", HttpGet)
    test("HttpSpy", HttpSpy)
    test("httpget", httpget)
    test("httppost", httppost)
    test("WebSocket", WebSocket)
    test("WebSocket.Connect", WebSocket.Connect)
    
    print("\n")
    
    print("=== Scanned more functions! ===")
    print("‚úÖÔ∏è Succes:"..Working_Scripts.." üìõ Failed:"..UnWorking_Scripts)
    print(Working_Scripts.." func rate of 241")
end)
